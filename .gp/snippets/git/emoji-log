# Emoji-Log: a git commit log standard
# See https://github.com/ahmadawais/Emoji-Log
# Note: This is a snippet file intended to be parsed into [alias] section of a .gitconfig file

# BEGIN: Emoji-Log standards
# See https://github.com/ahmadawais/Emoji-Log
# Git Commit, Add all and Push — in one step.
cap = "!f() { git add .; git commit -m \"$@\"; git push; }; f"
# Git Commit and Push. Assumes files have already been added
noadd = "!f() { git commit -m \"$@\"; git push; }; f"
# NEW: any initial commit
new = "!f() { git cap \"📦 NEW: $@\"; }; f"
# IMPROVE: Any feature or enhancement
imp = "!f() { git cap \"👌 IMPROVE: $@\"; }; f"
# FIX: Any bug fix
fix = "!f() { git cap \"🐛 FIX: $@\"; }; f"
# RELEASE: A new release/launch
rlz = "!f() { git cap \"🚀 RELEASE: $@\"; }; f"
# DOC: anything related to documentation
doc = "!f() { git cap \"📖 DOC: $@\"; }; f"
# TEST: anything related to testing
tst = "!f() { git cap \"🤖 TEST: $@\"; }; f"
# BREAKING CHANGE: anything that breaks the previous version/release
brk = "!f() { git cap \"‼️ BREAKING: $@\"; }; f"
# END: Emoji-Log standards
# BEGIN: Additional Gitmojis, see https://gitmoji.dev/
# REF: anything related to factoring code
ref = "!f() { git cap \"♻️ REFACTOR: $@\"; }; f"
# TYP: typos in code, docs, comments, etc...
typ = "!f() { git cap \"✏️ FIX TYPO: $@\"; }; f"
# REV: revert changes to a previous commit
rev = "!f() { git cap \"⏪ REVERT: $@\"; }; f"
# MER: Merge Branches, code, etc...
mer = "!f() { git cap \"🔀 MERGE: $@\"; }; f"
# MVR: Move or rename resources (e.g.: files, paths, routes)
mvr = "!f() { git cap \"🚚 MOVE/RENAME: $@\"; }; f"
# COM: Add or update comments in source code
com = "!f() { git cap \"💡 UPDATE COMMENTS: $@\"; }; f"
# DAT: Perform database related changes (e.g. Migrations, seeds, APIs)
dat = "!f() { git cap \"🗃️ DATABASE: $@\"; }; f"
# IGN: Add or update a .gitignore file.
ign = "!f() { git cap \"🙈 GITIGNORE: $@\"; }; f"
# WRK: Workaround or temporary fix
wrk = "!f() { git cap \"🩹 TEMP FIX: $@\"; }; f"
# REM: Remove ddead/unused code
rem = "!f() { git cap \"⚰️ REMOVE: $@\"; }; f"
# AD: Add libs, code, etc
ad = "!f() { git cap \"➕ ADD: $@\"; }; f"
# END: Additional Gitmojis
# BEGIN: commit and push only, no add (use for groups of files that need different commit messages)
new-c = "!f() { git noadd \"📦 NEW: $@\"; }; f"
imp-c = "!f() { git noadd \"👌 IMPROVE: $@\"; }; f"
fix-c = "!f() { git noadd \"🐛 FIX: $@\"; }; f"
rlz-c = "!f() { git noadd \"🚀 RELEASE: $@\"; }; f"
doc-c = "!f() { git noadd \"📖 DOC: $@\"; }; f"
tst-c = "!f() { git noadd \"🤖 TEST: $@\"; }; f"
brk-c = "!f() { git noadd \"‼️ BREAKING: $@\"; }; f"
ref-c = "!f() { git noadd \"♻️ REFACTOR: $@\"; }; f"
typ-c = "!f() { git noadd \"✏️ FIX TYPO: $@\"; }; f"
rev-c = "!f() { git noadd \"⏪ REVERT: $@\"; }; f"
mer-c = "!f() { git noadd \"🔀 MERGE: $@\"; }; f"
mvr-c = "!f() { git noadd \"🚚 MOVE/RENAME: $@\"; }; f"
com-c = "!f() { git noadd \"💡 UPDATE COMMENTS: $@\"; }; f"
dat-c = "!f() { git noadd \"🗃️ DATABASE: $@\"; }; f"
ign-c = "!f() { git noadd \"🙈 GITIGNORE: $@\"; }; f"
wrk-c = "!f() { git noadd \"🩹 TEMP FIX: $@\"; }; f"
rem-c = "!f() { git noadd \"⚰️ REMOVE: $@\"; }; f"
add-c = "!f() { git noadd \"➕ ADD: $@\"; }; f"
# END: commit and push only, no add